# -*- coding: utf-8 -*-
"""Copy of KNN.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1RYHA5myUwgye0sKvbVsOu42nWBiCeDT5
"""

from sklearn.metrics import classification_report, confusion_matrix
from sklearn.metrics import accuracy_score
from sklearn.neighbors import KNeighborsClassifier
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from imblearn.over_sampling import SMOTE
from imblearn.over_sampling import BorderlineSMOTE

dataset = pd.read_csv('creditcard.csv')

"""The X variable contains the first four columns of the dataset (i.e. attributes) while y contains the labels"""

X = dataset.iloc[:, :-1].values
y = dataset.iloc[:, 30].values

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.30)

smote = BorderlineSMOTE(random_state=101, kind='borderline-1')
X_train, y_train = smote.fit_resample(X_train, y_train)

scaler = StandardScaler()
scaler.fit(X_train)

X_train = scaler.transform(X_train)
X_test = scaler.transform(X_test)

classifier = KNeighborsClassifier(n_neighbors=2)
classifier.fit(X_train, y_train)

y_pred = classifier.predict(X_test)

print('accuracy = ', accuracy_score(y_test, y_pred))

print(confusion_matrix(y_test, y_pred))
print(classification_report(y_test, y_pred))

# error_rate = []

# # Will take some time
# for i in range(20, 25):

#     knn = KNeighborsClassifier(n_neighbors=i)
#     knn.fit(X_train, y_train)
#     pred_i = knn.predict(X_test)
#     error_rate.append(np.mean(pred_i != y_test))

# plt.figure(figsize=(10, 6))
# plt.plot(range(20, 25), error_rate, color='blue',
#          linestyle='dashed', marker='o',
#          markerfacecolor='red', markersize=10)

# plt.title('Error Rate vs. K Value')
# plt.xlabel('K')
# plt.ylabel('Error Rate')

# plt.show()
